#!/usr/bin/env python2.7

"""
A lightweight compile and simulate script.

* Variables are described with:
% gogo help_vars

* Gadgets are described with:
% gogo help_gadgets

"""

from __future__ import print_function

__version__       = '0.0.7'
__author__        = "Brian Hunter"
__email__         = 'brian.hunter@cavium.com'

#######################################################################################
# Imports

import command_line
import logging
import gvars
import sge_tools as sge
from gadget import GadgetFailed

########################################################################################
# Globals

Log = None

########################################################################################
if __name__ == '__main__':
    import schedule

    gadgets_to_run = command_line.parse_args(__version__, __doc__)
    Log = gvars.Log
    Log.info("Welcome to gogo v%s" % __version__)

    gvars.setup_globals()
    gvars.setup_vkits()

    # Prints out the latest of all source files
    try:
        if 'latest' in gadgets_to_run:
            import gadgets.latest
            schedule.add_gadget(gadgets.latest.LatestGadget())

        if 'clean' in gadgets_to_run:
            import gadgets.clean
            schedule.add_gadget(gadgets.clean.CleanGadget())

        if 'build' in gadgets_to_run:
            import gadgets.build
            schedule.add_gadget(gadgets.build.BuildGadget())

        if 'vlog' in gadgets_to_run:
            import gadgets.vlog
            schedule.add_gadget(gadgets.vlog.VlogGadget())

        if 'simulate' in gadgets_to_run:
            import gadgets.simulate
            schedule.add_gadget(gadgets.simulate.SimulateGadget())

        # turd files are flushed unless otherwise stated
        if not gvars.Options.noflush:
            import gadgets.flush
            schedule.add_gadget(gadgets.flush.FlushGadget())

        schedule.set_schedule(gadgets_to_run)
        schedule.run_schedule()

    except KeyboardInterrupt:
        sge.killAll()
        Log.critical("Exiting due to Ctrl-C.")

    except GadgetFailed as inst:
        Log.critical("%s Failed! Cannot Continue." % inst.args[0])

    # if we get here, we must have passed
    logging.shutdown()
